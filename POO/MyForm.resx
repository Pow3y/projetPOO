<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label22.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAOw2AADsNgHVoobGAAAAB3RJ
        TUUH5gcKBjQb5JYo4gAAA2RJREFUWEfd1llIVFEcx/Fp1JYZR41sIpwxtYI2KgwCe7HFCkelHoqiHnqI
        iBZaHlqIKML0qYKKynopCLL9IVofIiskI4rqxbXCSoUIoYUWc+n7G88dXErH8eZDf/gw47nn/s9/zj3n
        XB3/ZcQGqiyzsAKx+nvAwgweg2v4iSy1DVhoMHegUp/H0IZt/6QAJcVYrMH4joOYaxuhAk65AjUOD0XZ
        GmYQDa5BbmCk2jpcy0Yz7sGlNltDCTEJz6EiDmEwrGualTq8Q5rabA0lNOajAd+x1pMbfP6i1f8QTVAf
        c2eEoQRwIiY+75UjLrcm2OZKf6PP9fiBeixUu1EEzc5W/R1xeHLaB8NKXMYiDDVtou9HocH0SCZA7ZtM
        W5Enm92RE2ERcbnV1kCFJuFXnMEMaFZ0bRS0GHX9CjzIQQvuYhhMxghCN8OLXaiFBtIi240k6PoUvISu
        qVgtUvWpwmiYbBGGErgDVYP4nAbNwGe04in0ePQrF+ADPmEeVmMDdDqaTP0MJYK2XB60z7XftQi1PvQO
        0PlwHp0OqIhCCTATBViF6YiLzQ7OhK4Nx2Zomq3HkgGntVv6FSSSfVByTXcjSnEAmvbJ0C4Yh4O4iakw
        GcKN4uuOlHstaI5DPPjeaBWQip24hGrocLEK+ogSaNEtwUhv4cdueXqN9o7NHpzHBSiBuRqaiWhoxeuc
        34ureINfUEFNPJplEz+3Dftbnr+GOiEZ7wx9N1e7hzsQPBui4IP2ez6OuLMqJqaVtfnCzRMKdTKdQzd6
        8z9oEO3lwziB/VhnLEUm0qFZ0UEUk3zjZ59+SCjUyXQO3ThiS50KWA7rmXekE07tOgve4zUKHI7bzpQS
        mwpIOv1FBeitthj61Xtw3NBxq8X3DG+hw+dsVOKT6JT7NhWgtj8FA6FSz38IEqB1oP+OEn0XvoWdp1Oo
        k+kcutF38ZsG00sluQd+w8sOcI6502RTAUyj01OmbXcSes/rP5uelGNO4o4GGwtIeKwCTiGcAiqQlbjd
        rgL4rkfgyiyPdc+t8PXC75pd7h06/YVzzK3+P4K3qEcG/KkPWvypj1p9vSpt9Zvt5zf3Kody9bmAWrTC
        SmD9knBZP0A5lKtPBejcPgcrUdfk4bLuLUZ474Iub0NVbYfg4GG9DQc+HI7fxTfuURAdzB8AAAAASUVO
        RK5CYII=
</value>
  </data>
</root>